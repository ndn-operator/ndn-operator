apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: networks.named-data.net
spec:
  group: named-data.net
  names:
    categories: []
    kind: Network
    plural: networks
    shortNames:
    - nw
    singular: network
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.prefix
      name: Prefix
      type: string
    - jsonPath: .spec.udpUnicastPort
      name: UDP Unicast Port
      type: integer
    - jsonPath: .spec.routerCertIssuer.name
      name: Cert Issuer
      type: string
    - jsonPath: .status.dsCreated
      name: DaemonSet Created
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Network represents a Named Data Networking (NDN) network in Kubernetes
        properties:
          spec:
            properties:
              faces:
                description: Public faces to expose from router pods
                nullable: true
                properties:
                  tcp:
                    nullable: true
                    properties:
                      port:
                        format: uint16
                        maximum: 65535.0
                        minimum: 0.0
                        type: integer
                      serviceTemplate:
                        default:
                          type: ''
                        properties:
                          type:
                            default: LoadBalancer
                            description: 'Service type to expose this face (default: LoadBalancer)'
                            type: string
                        type: object
                    required:
                    - port
                    type: object
                  websocket:
                    nullable: true
                    properties:
                      port:
                        format: uint16
                        maximum: 65535.0
                        minimum: 0.0
                        type: integer
                      serviceTemplate:
                        default:
                          type: ''
                        properties:
                          type:
                            default: LoadBalancer
                            description: 'Service type to expose this face (default: LoadBalancer)'
                            type: string
                        type: object
                    required:
                    - port
                    type: object
                type: object
              ndnd:
                default:
                  image: ghcr.io/named-data/ndnd:latest
                description: The NDND image to use for the network controller
                properties:
                  image:
                    type: string
                required:
                - image
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: The node selector for the network, used to schedule the network controller on specific nodes
                nullable: true
                type: object
              operator:
                description: |-
                  The operator image to use for the network controller.
                  If not specified, the operator will use its own image
                nullable: true
                properties:
                  image:
                    type: string
                required:
                - image
                type: object
              prefix:
                description: |-
                  The prefix for the network, used for routing and naming conventions.
                  This should be a valid NDN prefix, e.g., "/example/network"
                type: string
              routerCertIssuer:
                description: |-
                  The certificate issuer for the router certificates.
                  If not specified, the network will be insecure (no certificates)
                nullable: true
                properties:
                  kind:
                    description: |-
                      The kind of the issuer, e.g., "Certificate".
                      "Certificate" and "ExternalCertificate" are supported
                      "ExternalCertificate" must have a key to sign certificates
                    type: string
                  name:
                    description: The name of the issuer, e.g., "router-cert"
                    type: string
                  namespace:
                    description: |-
                      The namespace of the issuer
                      If not specified, the certificate's namespace will be used
                    nullable: true
                    type: string
                required:
                - kind
                - name
                type: object
              trustAnchors:
                description: The trust anchors for the network, used for validating certificates
                items:
                  properties:
                    kind:
                      description: |-
                        The kind of the trust anchor, e.g., "Certificate".
                        "Certificate" and "ExternalCertificate" are supported
                      type: string
                    name:
                      description: The name of the trust anchor, e.g., "router-cert"
                      type: string
                    namespace:
                      description: |-
                        The namespace of the trust anchor.
                        If not specified, the network's namespace will be used
                      nullable: true
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                nullable: true
                type: array
              udpUnicastPort:
                description: |-
                  The UDP unicast port for the nodes.
                  Must be unique across all networks in the cluster.
                format: uint16
                maximum: 65535.0
                minimum: 0.0
                type: integer
            required:
            - prefix
            - udpUnicastPort
            type: object
          status:
            nullable: true
            properties:
              conditions:
                description: |-
                  Standard Kubernetes-style conditions for this network
                  - Ready: DSCreated && RBACReady
                  - DSCreated: DaemonSet successfully applied
                  - RBACReady: ServiceAccount, Role, RoleBinding successfully applied
                items:
                  description: Condition contains details for one aspect of the current state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                nullable: true
                type: array
              dsCreated:
                description: Indicates whether the DaemonSet for the network has been created
                nullable: true
                type: boolean
            type: object
        required:
        - spec
        title: Network
        type: object
    served: true
    storage: true
    subresources:
      status: {}
